import 'package:agecalculator/theme/theme_provider.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';
class AgeResult extends StatelessWidget {
  final Map<String, dynamic> ageDetails;
  final Map<String, dynamic> nextBirthdayInfo;
  final DateTime birthDate;

  const AgeResult({
    Key? key,
    required this.ageDetails,
    required this.nextBirthdayInfo,
    required this.birthDate,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final themeProvider = Provider.of<ThemeProvider>(context);

    return Scaffold(
      appBar: AppBar(
        title: const Text('نتيجة حساب عمرك'),
        centerTitle: true,
        actions: [
          IconButton(
            icon: Icon(
              themeProvider.isDarkMode ? Icons.dark_mode : Icons.light_mode,
            ),
            onPressed: themeProvider.toggleTheme,
          ),
        ],
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: themeProvider.isDarkMode
                ? [Colors.grey[900]!, Colors.grey[800]!]
                : [Colors.blue[100]!, Colors.blue[50]!],
          ),
        ),
        child: SingleChildScrollView(
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                _buildAgeCard(),
                const SizedBox(height: 20),
                _buildDetailsCard(),
                const SizedBox(height: 20),
                _buildNextBirthdayCard(),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildAgeCard() {
    return Card(
      elevation: 5,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(15),
      ),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            const Text(
              'عمرك الحالي',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 10),
            Text(
              '${ageDetails['years']} سنة و ${ageDetails['months']} شهر و ${ageDetails['days']} يوم',
              style: const TextStyle(fontSize: 20),
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildDetailsCard() {
    return Card(
      elevation: 5,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(15),
      ),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            const Text(
              'تفاصيل العمر',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 10),
            Text('عدد الشهور الكلية: ${ageDetails['totalDays']}'),
            Text('عدد الأيام الكلية: ${ageDetails['totalDays']}'),
            Text('عدد الساعات الكلية: ${ageDetails['totalHours']}'),
            Text('عدد الدقائق الكلية: ${ageDetails['totalMinutes']}'),
            Text('عدد الثواني الكلية: ${ageDetails['totalSeconds']}'),
          ],
        ),
      ),
    );
  }

  Widget _buildNextBirthdayCard() {
    return Card(
      elevation: 5,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(15),
      ),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            const Text(
              'عيد الميلاد القادم',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 10),
            Text(
              'سيكون عيد ميلادك يوم ${nextBirthdayInfo['dayOfWeek']}',
              textAlign: TextAlign.center,
            ),
            Text(
              'المتبقي: ${nextBirthdayInfo['daysRemaining']} يوم و ${nextBirthdayInfo['hoursRemaining']} ساعة و ${nextBirthdayInfo['minutesRemaining']} دقيقة',
              textAlign: TextAlign.center,
            ),
            Text(
              'التاريخ: ${DateFormat('yyyy-MM-dd').format(nextBirthdayInfo['date'])}',
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    );
  }
}
